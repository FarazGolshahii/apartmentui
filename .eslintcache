[{"D:\\apartmentui\\apartmentui\\src\\index.js":"1","D:\\apartmentui\\apartmentui\\src\\App.js":"2","D:\\apartmentui\\apartmentui\\src\\variable.jsx":"3","D:\\apartmentui\\apartmentui\\src\\View\\Units\\units.jsx":"4","D:\\apartmentui\\apartmentui\\src\\View\\Users\\Users.jsx":"5","D:\\apartmentui\\apartmentui\\src\\View\\Costs\\costs.jsx":"6","D:\\apartmentui\\apartmentui\\src\\View\\LoginPage.jsx":"7","D:\\apartmentui\\apartmentui\\src\\View\\Dashboard\\dashboard.jsx":"8","D:\\apartmentui\\apartmentui\\src\\View\\Bill\\bill.jsx":"9","D:\\apartmentui\\apartmentui\\src\\Component\\Header\\Header.jsx":"10","D:\\apartmentui\\apartmentui\\src\\Component\\Sidebar\\Sidebar.jsx":"11","D:\\apartmentui\\apartmentui\\src\\Services\\ApiServices.js":"12","D:\\apartmentui\\apartmentui\\src\\Utility\\NETUtility.js":"13","D:\\apartmentui\\apartmentui\\src\\View\\Routes.jsx":"14","D:\\apartmentui\\apartmentui\\src\\Component\\Table\\Table.jsx":"15","D:\\apartmentui\\apartmentui\\src\\Component\\Table\\DashboardTable.jsx":"16","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\UncontrolledModal.jsx":"17","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\modal.jsx":"18","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\FormModal.jsx":"19","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\UseModal.jsx":"20","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\FormConfig.jsx":"21","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UnitForm.jsx":"22","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UserForm.jsx":"23","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\DeleteForm.jsx":"24","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CostForm.jsx":"25","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\BuildingForm.jsx":"26","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CostCategoryForm.jsx":"27","D:\\apartmentui\\apartmentui\\src\\View\\Building\\Building.jsx":"28","D:\\apartmentui\\apartmentui\\src\\Utility\\FormButtonGenerator.js":"29","D:\\apartmentui\\apartmentui\\src\\Services\\APIConfig.jsx":"30","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UseFormData.jsx":"31","D:\\apartmentui\\apartmentui\\src\\Component\\Table\\Pagination.jsx":"32","D:\\apartmentui\\apartmentui\\src\\Services\\FormServices\\UnitService.js":"33","D:\\apartmentui\\apartmentui\\src\\View\\Calculate\\Calculate.jsx":"34","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\BillForm.jsx":"35","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CalculateForm.jsx":"36","D:\\apartmentui\\apartmentui\\src\\Services\\StorageServces\\LocalStorageService.js":"37"},{"size":401,"mtime":1614805080717,"results":"38","hashOfConfig":"39"},{"size":1789,"mtime":1614806488800,"results":"40","hashOfConfig":"39"},{"size":5375,"mtime":1614770737769,"results":"41","hashOfConfig":"39"},{"size":4124,"mtime":1614800487084,"results":"42","hashOfConfig":"39"},{"size":2162,"mtime":1614786489945,"results":"43","hashOfConfig":"39"},{"size":3173,"mtime":1614786384700,"results":"44","hashOfConfig":"39"},{"size":635,"mtime":1614800726785,"results":"45","hashOfConfig":"39"},{"size":251,"mtime":1614759742751,"results":"46","hashOfConfig":"39"},{"size":1566,"mtime":1614766838947,"results":"47","hashOfConfig":"39"},{"size":530,"mtime":1614805938132,"results":"48","hashOfConfig":"39"},{"size":867,"mtime":1614801305129,"results":"49","hashOfConfig":"39"},{"size":982,"mtime":1614806471751,"results":"50","hashOfConfig":"39"},{"size":130,"mtime":1614806134210,"results":"51","hashOfConfig":"39"},{"size":1270,"mtime":1614766838950,"results":"52","hashOfConfig":"39"},{"size":2087,"mtime":1614766838946,"results":"53","hashOfConfig":"39"},{"size":7730,"mtime":1614759742743,"results":"54","hashOfConfig":"39"},{"size":429,"mtime":1614759742740,"results":"55","hashOfConfig":"39"},{"size":669,"mtime":1614759742741,"results":"56","hashOfConfig":"39"},{"size":387,"mtime":1614759742740,"results":"57","hashOfConfig":"39"},{"size":616,"mtime":1614759742741,"results":"58","hashOfConfig":"39"},{"size":105,"mtime":1614805955723,"results":"59","hashOfConfig":"39"},{"size":8431,"mtime":1614794956015,"results":"60","hashOfConfig":"39"},{"size":3061,"mtime":1614766838945,"results":"61","hashOfConfig":"39"},{"size":1188,"mtime":1614759742737,"results":"62","hashOfConfig":"39"},{"size":4847,"mtime":1614787982360,"results":"63","hashOfConfig":"39"},{"size":3317,"mtime":1614801487584,"results":"64","hashOfConfig":"39"},{"size":3453,"mtime":1614759742735,"results":"65","hashOfConfig":"39"},{"size":1885,"mtime":1614801309464,"results":"66","hashOfConfig":"39"},{"size":328,"mtime":1614759742746,"results":"67","hashOfConfig":"39"},{"size":105,"mtime":1614789217661,"results":"68","hashOfConfig":"39"},{"size":1560,"mtime":1614801656017,"results":"69","hashOfConfig":"39"},{"size":869,"mtime":1614759742743,"results":"70","hashOfConfig":"39"},{"size":160,"mtime":1614766308268,"results":"71","hashOfConfig":"39"},{"size":1888,"mtime":1614802431360,"results":"72","hashOfConfig":"39"},{"size":3421,"mtime":1614805847741,"results":"73","hashOfConfig":"39"},{"size":2136,"mtime":1614805882707,"results":"74","hashOfConfig":"39"},{"size":189,"mtime":1614772320302,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1bqt77p",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\apartmentui\\apartmentui\\src\\index.js",[],["168","169"],"D:\\apartmentui\\apartmentui\\src\\App.js",["170"],"D:\\apartmentui\\apartmentui\\src\\variable.jsx",[],"D:\\apartmentui\\apartmentui\\src\\View\\Units\\units.jsx",["171","172","173","174","175"],"import ATable from \"../../Component/Table/Table\";\r\nimport AModal from \"../../Component/Modal/modal\";\r\nimport UnitForm from \"../../Component/Form/UnitForm\";\r\nimport UnControlledModal from \"../../Component/Modal/UncontrolledModal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { GetData, PostData } from \"../../Services/ApiServices\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport DeleteForm from \"../../Component/Form/DeleteForm\";\r\nimport { Button } from \"reactstrap\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport PageVariable from \"../../variable\";\r\nimport { ReadBuidling } from \"../../Services/StorageServces/LocalStorageService\";\r\n\r\nconst headerTitle = [\r\n  {\r\n    title: PageVariable.Units.headerTitle.unitNumber,\r\n    field: \"unitNumber\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.area,\r\n    field: \"area\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.ownerName,\r\n    field: \"ownerName\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.tenantName,\r\n    field: \"tenantName\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.occupantcount,\r\n    field: \"occupantCount\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.ownerLiveDate,\r\n    field: \"ownerLiveDate\",\r\n  },\r\n  {\r\n    title: PageVariable.Units.headerTitle.tenantLiveDate,\r\n    field: \"tenantLiveDate\",\r\n  },\r\n];\r\n\r\nclass UnitInfo {\r\n  constructor(data, persons) {\r\n    this.id = data.apartment.apartmentId;\r\n    this.unitNumber = data.apartment.number;\r\n    this.area = data.apartment.area;\r\n    this.occupantCount = data.apartment.occupantCount;\r\n    this.ownerName = \"بدون مالک\";\r\n    this.tenantName = \"بدون ساکن\";\r\n    if (data.owner) {\r\n      const owner = persons.find((p) => p.personId === data.owner.personId);\r\n      this.ownerName = owner ? owner.name + \" \" + owner.lastname : \"-\";\r\n      this.ownerFrom = data.owner.from;\r\n      this.ownerTo = data.owner.to;\r\n    }\r\n    if (data.tenant) {\r\n      const tenant = persons.find((p) => p.personId === data.tenant.personId);\r\n      this.tenantName = tenant ? tenant.name + \" \" + tenant.lastname : \"-\";\r\n      this.tenantFrom = data.tenant.from;\r\n      this.tenantTo = data.tenant.to;\r\n    }\r\n  }\r\n  get ownerLiveDate() {\r\n    return this.ownerFrom\r\n      ? NetDatetime(this.ownerFrom) + \" تا \" + NetDatetime(this.ownerTo)\r\n      : \"بدون مالک\";\r\n  }\r\n  get tenantLiveDate() {\r\n    return this.ownerFrom\r\n      ? NetDatetime(this.ownerFrom) + \" تا \" + NetDatetime(this.ownerTo)\r\n      : \"بدون مالک\";\r\n  }\r\n}\r\n\r\nconst Units = () => {\r\n  const [units, setUnits] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [modalState, toggleModal, getModalData] = useModal([\r\n    \"add\",\r\n    \"edit\",\r\n    \"delete\",\r\n  ]);\r\n\r\n  useEffect(async () => {\r\n    setUnits(await GetData(`BaseInfo/Apartment/${1}`));\r\n    setPersons(await GetData(\"BaseInfo/Person\"));\r\n  }, [modalState]);\r\n  return (\r\n    <>\r\n      <ATable\r\n        tableTitle={PageVariable.Units.tableTitle}\r\n        rows={units.map((c) => new UnitInfo(c, persons))}\r\n        headers={headerTitle}\r\n        actions={[\r\n          { icon: \"fas fa-edit\", onClick: (id) => toggleModal(\"edit\", id) },\r\n        ]}\r\n      >\r\n        <Button\r\n          className=\"mx-2 p-2\"\r\n          color=\"danger\"\r\n          onClick={() => toggleModal(\"add\")}\r\n        >\r\n          {PageVariable.Units.addUnitButton}\r\n        </Button>\r\n      </ATable>\r\n      <FormModal\r\n        Form={UnitForm}\r\n        toggle={() => toggleModal(\"add\")}\r\n        data={getModalData(\"add\")}\r\n        mode={formMode.add}\r\n      />\r\n      <FormModal\r\n        Form={UnitForm}\r\n        toggle={() => toggleModal(\"edit\")}\r\n        data={getModalData(\"edit\")}\r\n        mode={formMode.edit}\r\n      />\r\n      <FormModal\r\n        Form={DeleteForm}\r\n        url=\"BaseInfo/Expense\"\r\n        toggle={() => toggleModal(\"delete\")}\r\n        data={getModalData(\"delete\")}\r\n        mode={formMode.delete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Units;\r\n","D:\\apartmentui\\apartmentui\\src\\View\\Users\\Users.jsx",["176"],"import { useEffect, useState } from \"react\";\r\nimport ATable from \"../../Component/Table/Table\";\r\nimport UserForm from \"../../Component/Form/UserForm\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport { Button } from \"reactstrap\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport PageVariable from \"../../variable\";\r\n\r\nconst headerTitle = [\r\n  {\r\n    title: PageVariable.Users.headerTitle.Name,\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: PageVariable.Users.headerTitle.LastName,\r\n    field: \"lastName\",\r\n  },\r\n  {\r\n    title: PageVariable.Users.headerTitle.PhoneNumber,\r\n    field: \"phoneNumber\",\r\n  },\r\n];\r\n\r\nclass UserInfo {\r\n  constructor(data) {\r\n    for (let item in data) {\r\n      this[item] = data[item];\r\n    }\r\n  }\r\n  // get liveDate() {\r\n  //   return this.Name + \" \" + this.LastName;\r\n  // }\r\n  get id() {\r\n    return this.userId;\r\n  }\r\n}\r\n\r\nconst Users = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [modalState, toggleModal, getModalData] = useModal([\r\n    \"add\",\r\n    \"edit\",\r\n    \"delete\",\r\n  ]);\r\n\r\n  useEffect(async () => {\r\n    const users = await GetData(\"BaseInfo/Person\");\r\n    setUser(users);\r\n  }, [modalState]);\r\n  return (\r\n    <>\r\n      <ATable\r\n        tableTitle={PageVariable.Users.tableTitle}\r\n        rows={user.map((c) => new UserInfo(c))}\r\n        headers={headerTitle}\r\n        actions={[\r\n          { icon: \"fas fa-edit\", onClick: (id) => toggleModal(\"edit\", id) },\r\n        ]}\r\n      >\r\n        <Button\r\n          className=\"mx-2 p-2\"\r\n          color=\"danger\"\r\n          onClick={() => toggleModal(\"add\")}\r\n        >\r\n          {PageVariable.Users.addUserButton}\r\n        </Button>\r\n      </ATable>\r\n      <FormModal\r\n        Form={UserForm}\r\n        toggle={() => toggleModal(\"add\")}\r\n        data={getModalData(\"add\")}\r\n        mode={formMode.add}\r\n      />\r\n      <FormModal\r\n        Form={UserForm}\r\n        toggle={() => toggleModal(\"edit\")}\r\n        data={getModalData(\"edit\")}\r\n        mode={formMode.edit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","D:\\apartmentui\\apartmentui\\src\\View\\Costs\\costs.jsx",["177"],"import { useEffect, useState } from \"react\";\r\nimport CostForm from \"../../Component/Form/CostForm\";\r\nimport CostCategoryForm from \"../../Component/Form/CostCategoryForm\";\r\nimport ATable from \"../../Component/Table/Table\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport { Button } from \"reactstrap\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport DeleteForm from \"../../Component/Form/DeleteForm\";\r\nimport PageVariable from \"../../variable\";\r\n\r\nconst headerTitle = [\r\n  {\r\n    title: PageVariable.Costs.headerTitle.title,\r\n    field: \"title\",\r\n  },\r\n  {\r\n    title: PageVariable.Costs.headerTitle.expenseCategoryName,\r\n    field: \"expenseCategoryName\",\r\n  },\r\n  {\r\n    title: PageVariable.Costs.headerTitle.amount,\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: PageVariable.Costs.headerTitle.liveDate,\r\n    field: \"liveDate\",\r\n  },\r\n];\r\n\r\nclass CostInfo {\r\n  constructor(data) {\r\n    for (let item in data) {\r\n      this[item] = data[item];\r\n    }\r\n  }\r\n  get liveDate() {\r\n    return NetDatetime(this.from) + \" تا \" + NetDatetime(this.to);\r\n  }\r\n  get id() {\r\n    return this.expenseId;\r\n  }\r\n}\r\n\r\nconst Costs = () => {\r\n  const [costs, setCosts] = useState([]);\r\n  const [modalState, toggleModal, getModalData] = useModal([\r\n    \"add\",\r\n    \"edit\",\r\n    \"delete\",\r\n    \"addCategory\",\r\n  ]);\r\n\r\n  useEffect(async () => {\r\n    const costs = await GetData(\"BaseInfo/Expense\");\r\n    setCosts(costs);\r\n  }, [modalState]);\r\n  return (\r\n    <>\r\n      <ATable\r\n        tableTitle={PageVariable.Costs.tableTitle}\r\n        rows={costs.map((c) => new CostInfo(c))}\r\n        headers={headerTitle}\r\n        actions={[\r\n          { icon: \"fas fa-edit\", onClick: (id) => toggleModal(\"edit\", id) },\r\n          { icon: \"fa fa-trash\", onClick: (id) => toggleModal(\"delete\", id) },\r\n        ]}\r\n      >\r\n        <Button\r\n          className=\"mx-2 p-2\"\r\n          color=\"danger\"\r\n          onClick={() => toggleModal(\"addCategory\")}\r\n        >\r\n          {PageVariable.Costs.addCategoryButton}\r\n        </Button>\r\n        <Button\r\n          className=\"mx-2 p-2\"\r\n          color=\"danger\"\r\n          onClick={() => toggleModal(\"add\")}\r\n        >\r\n          {PageVariable.Costs.addCostButton}\r\n        </Button>\r\n      </ATable>\r\n      <FormModal\r\n        Form={CostForm}\r\n        toggle={() => toggleModal(\"add\")}\r\n        data={getModalData(\"add\")}\r\n        mode={formMode.add}\r\n      />\r\n      <FormModal\r\n        Form={CostCategoryForm}\r\n        toggle={() => toggleModal(\"addCategory\")}\r\n        data={getModalData(\"addCategory\")}\r\n        mode={formMode.add}\r\n      />\r\n      <FormModal\r\n        Form={CostForm}\r\n        toggle={() => toggleModal(\"edit\")}\r\n        data={getModalData(\"edit\")}\r\n        mode={formMode.edit}\r\n      />\r\n      <FormModal\r\n        Form={DeleteForm}\r\n        url=\"BaseInfo/Expense\"\r\n        toggle={() => toggleModal(\"delete\")}\r\n        data={getModalData(\"delete\")}\r\n        mode={formMode.delete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Costs;\r\n","D:\\apartmentui\\apartmentui\\src\\View\\LoginPage.jsx",["178","179"],"import { useHistory } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport BuildingForm from \"../Component/Form/BuildingForm\";\r\nimport formMode from \"../Component/Form/FormConfig\";\r\nimport \"./login.css\";\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div id=\"grad\" className=\"text-center\">\r\n      <div className=\"h-25\"></div>\r\n      <Col sm=\"12\" md=\"6\" className=\"d-inline-block\">\r\n        <BuildingForm\r\n          onSuccess={() => history.push(\"/Dashboard\")}\r\n          mode={formMode.add}\r\n        ></BuildingForm>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","D:\\apartmentui\\apartmentui\\src\\View\\Dashboard\\dashboard.jsx",["180","181","182","183","184","185"],"import { Card, CardBody, CardTitle, Col, Container, Row } from \"reactstrap\";\r\nimport DashboardTable from \"../../Component/Table/DashboardTable\";\r\nconst Dashboard = () => {\r\n  return <DashboardTable></DashboardTable>;\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\apartmentui\\apartmentui\\src\\View\\Bill\\bill.jsx",["186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import { useEffect, useState } from \"react\";\r\nimport CostForm from \"../../Component/Form/CostForm\";\r\nimport CostCategoryForm from \"../../Component/Form/CostCategoryForm\";\r\nimport ATable from \"../../Component/Table/Table\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport { Button, Card, Container } from \"reactstrap\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport DeleteForm from \"../../Component/Form/DeleteForm\";\r\nimport PageVariable from \"../../variable\";\r\nimport BillForm from \"../../Component/Form/BillForm\";\r\nconst headerTitle = [\r\n  {\r\n    title: \"شماره واحد\",\r\n    field: \"apartmentNumber\",\r\n  },\r\n  {\r\n    title: \"نام و نام خانوادگی پرداخت کننده\",\r\n    field: \"fullName\",\r\n  },\r\n  {\r\n    title: \"مجموع مبالغ\",\r\n    field: \"totalCharge\",\r\n  },\r\n  {\r\n    title: \"بازه ی زمانی مشخص شده\",\r\n    field: \"liveDate\",\r\n  },\r\n];\r\nclass BillInfo {\r\n  constructor(data) {\r\n    for (let item in data) {\r\n      this[item] = data[item];\r\n    }\r\n  }\r\n  get liveDate() {\r\n    return NetDatetime(this.from) + \" تا \" + NetDatetime(this.to);\r\n  }\r\n}\r\nconst Bills = () => {\r\n  const [costs, setCosts] = useState([]);\r\n\r\n  return (\r\n    <ATable\r\n      tableTitle=\"صورتحساب\"\r\n      rows={costs.map((c) => new BillInfo(c))}\r\n      headers={headerTitle}\r\n    ></ATable>\r\n  );\r\n};\r\n\r\nexport default Bills;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Header\\Header.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Sidebar\\Sidebar.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Services\\ApiServices.js",[],"D:\\apartmentui\\apartmentui\\src\\Utility\\NETUtility.js",[],"D:\\apartmentui\\apartmentui\\src\\View\\Routes.jsx",["200"],"import Dashboard from \"./Dashboard/dashboard\";\r\nimport Units from \"./Units/units\";\r\nimport Costs from \"./Costs/costs\";\r\nimport Bill from \"./Bill/bill\";\r\nimport Users from \"./Users/Users\";\r\nimport Building from \"./Building/Building\";\r\nimport PageVariable from \"../variable\";\r\nimport Calculate from \"./Calculate/Calculate\";\r\nconst routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: PageVariable.Routers.Dashboard,\r\n    icon: \"fas fa-home\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/units\",\r\n    name: PageVariable.Routers.Unit,\r\n    icon: \"fas fa-building\",\r\n    component: Units,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/costs\",\r\n    name: PageVariable.Routers.Costs,\r\n    icon: \"fas fa-money-bill\",\r\n    component: Costs,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Calculate\",\r\n    name: PageVariable.Routers.Calculate,\r\n    icon: \"fas fa-calculator\",\r\n    component: Calculate,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/bill\",\r\n    name: PageVariable.Routers.Bill,\r\n    icon: \"\tfa fa-credit-card\",\r\n    component: Bill,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Users\",\r\n    name: PageVariable.Routers.Users,\r\n    icon: \"fa fa-users\",\r\n    component: Users,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\nexport default routes;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Table\\Table.jsx",["201","202"],"import {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport PageVariable from \"../../variable\";\r\nimport APagination from \"./Pagination\";\r\nimport \"./Table.css\";\r\n\r\nconst ATable = ({ headers, tableTitle, rows, actions, children }) => {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row>\r\n                  <h3 className=\"mb-0\">{tableTitle}</h3>\r\n                  <div className=\"col text-left\">{children}</div>\r\n                </Row>\r\n              </CardHeader>\r\n              <table class=\"table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    {headers.map((header) => (\r\n                      <th scope=\"col\">{header.title}</th>\r\n                    ))}\r\n                    {actions ? <th>{PageVariable.Table}</th> : null}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row) => (\r\n                    <tr>\r\n                      {headers.map((header) => (\r\n                        <td>{row[header.field]}</td>\r\n                      ))}\r\n                      {actions ? (\r\n                        <td>\r\n                          {actions.map((action) => (\r\n                            <button\r\n                              className=\"btn pb-0 pr-2 pl-2 pt-1 d-inline-block\"\r\n                              onClick={() => action.onClick(row.id)}\r\n                            >\r\n                              <i className={action.icon} aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          ))}\r\n                        </td>\r\n                      ) : null}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <CardFooter className=\"py-4\"></CardFooter>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ATable;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Table\\DashboardTable.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\UncontrolledModal.jsx",["203","204"],"import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\nconst UnControlledModal = ({\r\n  modal,\r\n  toggle,\r\n  titleLabel,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className={className}>\r\n      <ModalHeader toggle={toggle}>{titleLabel}</ModalHeader>\r\n      <ModalBody>{children}</ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UnControlledModal;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\modal.jsx",["205","206"],"import React, { Children, useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst AModal = ({ titleLabel, buttonLabel, children, className }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"danger\" onClick={toggle}>\r\n        {buttonLabel}\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>{titleLabel}</ModalHeader>\r\n        <ModalBody onSubmit={toggle}>{children}</ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AModal;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\FormModal.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Modal\\UseModal.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Form\\FormConfig.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UnitForm.jsx",["207","208","209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport { GetPersons } from \"../../Services/FormServices/UnitService\";\r\nimport generateText from \"../../Utility/FormButtonGenerator\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport PageVariable from \"../../variable\";\r\nimport formMode from \"./FormConfig\";\r\nimport useFormData from \"./UseFormData\";\r\n\r\nconst formDataTemplate = {\r\n  unitId: null,\r\n  unitNumber: null,\r\n  area: null,\r\n  occupantcount: null,\r\n  onwerId: null,\r\n  tenantId: null,\r\n  ownerFrom: null,\r\n  ownerTo: null,\r\n  tenantFrom: null,\r\n  tenantTo: null,\r\n};\r\nconst UnitForm = ({ url = \"BaseInfo/Expense\", data, mode, onSuccess }) => {\r\n  const [formData, handleChange, handleSubmit, setFormData] = useFormData({\r\n    mode: mode,\r\n    data: formDataTemplate,\r\n    onSuccess: onSuccess,\r\n    url,\r\n  });\r\n  const prepareFormConstants = async () => {\r\n    if (mode == formMode.edit) {\r\n      const { data: unit } = await GetData(url + `/${data}`);\r\n      unit.ownerFrom = NetDatetime(unit.from);\r\n      unit.ownerTo = NetDatetime(unit.to);\r\n      unit.tenantFrom = NetDatetime(unit.tenantFrom);\r\n      unit.tenantTo = NetDatetime(unit.tenantTo);\r\n      setFormData(unit);\r\n    }\r\n  };\r\n  useEffect(prepareFormConstants, []);\r\n  const formLabel = generateText(mode);\r\n  const [persons, setPersons] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  useEffect(async () => setPersons(await GetPersons()), []);\r\n  return (\r\n    <Card className=\" border-0\">\r\n      <CardHeader className=\"bg-transparent\">\r\n        <div className=\"text-muted text-center\">\r\n          <Label>\r\n            {formLabel} {PageVariable.UnitForm.unit}\r\n          </Label>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form role=\"form\" onSubmit={handleSubmit}>\r\n          <input name=\"expenseId\" value={formData.unitId} hidden />\r\n          <FormGroup>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UnitForm.unitNumber.headerTitle}</small>\r\n                </div>\r\n                <InputGroup>\r\n                  <Input\r\n                    name=\"unitNumber\"\r\n                    placeholder={PageVariable.UnitForm.unitNumber.placeholder}\r\n                    min={1}\r\n                    max={100}\r\n                    type=\"number\"\r\n                    step=\"1\"\r\n                    value={formData.unitNumber}\r\n                    onChange={handleChange}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UnitForm.area.headerTitle}</small>\r\n                </div>\r\n                <InputGroup>\r\n                  <Input\r\n                    name=\"area\"\r\n                    placeholder={PageVariable.UnitForm.area.placeholder}\r\n                    min={20}\r\n                    type=\"number\"\r\n                    step=\"5\"\r\n                    value={formData.area}\r\n                    onChange={handleChange}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <Row>\r\n            <Col xl=\"6\" md=\"4\" sm=\"3\">\r\n              <div className=\"text-right text-muted\">\r\n                <small>{PageVariable.UnitForm.ownerName.headerTitle}</small>\r\n              </div>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"ownerId\"\r\n                value={formData.ownerId}\r\n                onChange={handleChange}\r\n              >\r\n                {persons.map((c) => (\r\n                  <option value={c.personId}>\r\n                    {c.name + \" \" + c.lastName}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UnitForm.ownerLiveDate.fromTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"ownerFrom\"\r\n                  value={formData.ownerFrom}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UnitForm.ownerLiveDate.toTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"ownerTo\"\r\n                  value={formData.ownerTo}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n\r\n          <div>\r\n            <Row>\r\n              <Col sm=\"1\">\r\n                <Input id=\"acardion\" type=\"checkbox\" onClick={toggle} />\r\n              </Col>\r\n              <Col sm=\"11\" className=\"text-right\">\r\n                <Label check className=\"text-right text-muted\" for=\"acardion\">\r\n                  {PageVariable.UnitForm.checkboxTitle}\r\n                </Label>\r\n              </Col>\r\n            </Row>\r\n            <Collapse isOpen={isOpen}>\r\n              <Row>\r\n                <Col xl=\"6\" md=\"4\" sm=\"3\">\r\n                  <div className=\"text-right text-muted\">\r\n                    <small>\r\n                      {PageVariable.UnitForm.tenantName.headerTitle}\r\n                    </small>\r\n                  </div>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"tenantId\"\r\n                      value={formData.tenantId}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {persons.map((c) => (\r\n                        <option value={c.personId}>\r\n                          {c.name + \" \" + c.lastName}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"text-right text-muted\">\r\n                    <small>\r\n                      {PageVariable.UnitForm.occupantcount.headerTitle}\r\n                    </small>\r\n                  </div>\r\n                  <InputGroup>\r\n                    <Input\r\n                      name=\"occupantcount\"\r\n                      placeholder={\r\n                        PageVariable.UnitForm.occupantcount.placeholder\r\n                      }\r\n                      min={1}\r\n                      type=\"number\"\r\n                      step=\"1\"\r\n                      value={formData.a}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"text-right text-muted\">\r\n                      <small>\r\n                        {PageVariable.UnitForm.tenantLiveDate.fromTitle}\r\n                      </small>\r\n                    </div>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"tenantFrom\"\r\n                      value={formData.tenantFrom}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"text-right text-muted\">\r\n                      <small>\r\n                        {PageVariable.UnitForm.tenantLiveDate.toTitle}\r\n                      </small>\r\n                    </div>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"tenantTo\"\r\n                      value={formData.tenantTo}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n            </Collapse>\r\n          </div>\r\n\r\n          <Button color=\"secondary\" className=\"mt-2\">\r\n            {PageVariable.UnitForm.addButton}\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UnitForm;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UserForm.jsx",["211","212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from \"react\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport generateText from \"../../Utility/FormButtonGenerator\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport formMode from \"./FormConfig\";\r\nimport useFormData from \"./UseFormData\";\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  ButtonDropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport PageVariable from \"../../variable\";\r\n\r\nconst formDataTemplate = {\r\n  userId: null,\r\n  name: null,\r\n  lastName: null,\r\n  phoneNumber: null,\r\n};\r\n\r\nconst UserForm = ({ url = \"BaseInfo/Person\", data, mode, onSuccess }) => {\r\n  const [formData, handleChange, handleSubmit, setFormData] = useFormData({\r\n    mode: mode,\r\n    data: formDataTemplate,\r\n    onSuccess: onSuccess,\r\n    url,\r\n  });\r\n\r\n  const formLabel = generateText(mode);\r\n  return (\r\n    <>\r\n      <Card className=\" border-0\">\r\n        <CardHeader className=\"bg-transparent\">\r\n          <div className=\"text-muted text-center\">\r\n            <Label>\r\n              {formLabel} {PageVariable.UserForm.user}\r\n            </Label>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form role=\"form\" onSubmit={handleSubmit}>\r\n            <input name=\"userId\" value={formData.userId} hidden />\r\n            <Row className=\"item-center \">\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UserForm.Name.headerTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"Name\"\r\n                  placeholder={PageVariable.UserForm.Name.placeholder}\r\n                  value={formData.Name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.UserForm.LastName.headerTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"LastName\"\r\n                  placeholder={PageVariable.UserForm.LastName.placeholder}\r\n                  value={formData.LastName}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Col>\r\n              <div className=\"text-right text-muted\">\r\n                <small>{PageVariable.UserForm.PhoneNumber.headerTitle}</small>\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"PhoneNumber\"\r\n                placeholder={PageVariable.UserForm.PhoneNumber.placeholder}\r\n                value={formData.PhoneNumber}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n            <Button color=\"secondary\" className=\"mt-3\">\r\n              {formLabel}\r\n            </Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\DeleteForm.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CostForm.jsx",["220","221","222","223"],"import React, { useEffect, useState } from \"react\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport generateText from \"../../Utility/FormButtonGenerator\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\nimport formMode from \"./FormConfig\";\r\nimport useFormData from \"./UseFormData\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport PageVariable from \"../../variable\";\r\n\r\nconst formDataTemplate = {\r\n  expenseId: null,\r\n  title: null,\r\n  expenseCategoryId: null,\r\n  amount: null,\r\n  from: null,\r\n  to: null,\r\n};\r\n\r\nconst CostForm = ({ url = \"BaseInfo/Expense\", data, mode, onSuccess }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [formData, handleChange, handleSubmit, setFormData] = useFormData({\r\n    mode: mode,\r\n    data: formDataTemplate,\r\n    onSuccess: onSuccess,\r\n    url,\r\n  });\r\n\r\n  const prepareFormConstants = async () => {\r\n    let categoryList = await GetData(\"Baseinfo/Expense/Category\");\r\n    setCategories(categoryList);\r\n    const newFormData = { ...formData };\r\n    newFormData.expenseCategoryId = categoryList[0]\r\n      ? categoryList[0].expensCategoryId\r\n      : null;\r\n    setFormData(newFormData);\r\n\r\n    if (mode == formMode.edit) {\r\n      const { data: cost } = await GetData(url + `/${data}`);\r\n      cost.from = NetDatetime(cost.from);\r\n      cost.to = NetDatetime(cost.to);\r\n      setFormData(cost);\r\n    }\r\n  };\r\n\r\n  useEffect(prepareFormConstants, []);\r\n  const formLabel = generateText(mode);\r\n  return (\r\n    <>\r\n      <CardHeader className=\"bg-transparent\">\r\n        <div className=\"text-muted text-center\">\r\n          <Label>\r\n            {formLabel} {PageVariable.CostForm.cost}\r\n          </Label>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form role=\"form\" onSubmit={handleSubmit}>\r\n          <input name=\"expenseId\" value={formData.expenseId} hidden />\r\n          <Row className=\"item-center \">\r\n            <Col>\r\n              <div className=\"text-right text-muted\">\r\n                <small>{PageVariable.CostForm.title.headerTitle}</small>\r\n              </div>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder={PageVariable.CostForm.title.placeholder}\r\n                value={formData.title}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"item-center \">\r\n            <Col>\r\n              <div className=\"text-right text-muted\">\r\n                <small>{PageVariable.CostForm.amount.headerTitle}</small>\r\n              </div>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                step=\"10000\"\r\n                placeholder={PageVariable.CostForm.amount.placeholder}\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>\r\n                    {PageVariable.CostForm.expenseCategoryId.headerTitle}\r\n                  </small>\r\n                </div>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"expenseCategoryId\"\r\n                  value={formData.expenseCategoryId}\r\n                  onChange={handleChange}\r\n                >\r\n                  {categories.map((c) => (\r\n                    <option value={c.expensCategoryId}>\r\n                      {c.expensCategoryName}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.CostForm.liveDate.fromTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"from\"\r\n                  id=\"from\"\r\n                  value={formData.from}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>{PageVariable.CostForm.liveDate.toTitle}</small>\r\n                </div>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"to\"\r\n                  id=\"to\"\r\n                  value={formData.to}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <Button color=\"secondary\" className=\"mt-2\">\r\n            {formLabel}\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CostForm;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\BuildingForm.jsx",["224","225","226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport generateText from \"../../Utility/FormButtonGenerator\";\r\nimport formMode from \"./FormConfig\";\r\nimport useFormData from \"./UseFormData\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport {\r\n  ReadBuidling,\r\n  WriteBuilding,\r\n} from \"../../Services/StorageServces/LocalStorageService\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\n\r\nconst formInputNames = {\r\n  buildingId: \"buildingId\",\r\n  name: \"name\",\r\n  apartmentCount: \"apartmentCount\",\r\n};\r\n\r\nconst formDataTemplate = {\r\n  buildingId: null,\r\n  name: null,\r\n  apartmentCount: null,\r\n};\r\n\r\nconst BuildingForm = ({ url = \"BaseInfo/Building\", mode, onSuccess }) => {\r\n  const handleSuccess = (data) => {\r\n    WriteBuilding(+data.buildingId);\r\n    onSuccess();\r\n  };\r\n\r\n  const validator = (name, value) => {\r\n    if (name === formInputNames.apartmentCount) return value >= 2;\r\n    if (name === formInputNames.name) return value !== \"\";\r\n    return true;\r\n  };\r\n\r\n  const [formData, handleChange, handleSubmit, setFormData] = useFormData({\r\n    mode: mode,\r\n    data: formDataTemplate,\r\n    onSuccess: mode == formMode.add ? handleSuccess : onSuccess,\r\n    url,\r\n    validator,\r\n  });\r\n  useEffect(async () => {\r\n    if (mode === formMode.edit) {\r\n      const buildings = await GetData(\"BaseInfo/Building\");\r\n      setFormData(buildings.find((b) => b.buildingId === +ReadBuidling()));\r\n    }\r\n  }, []);\r\n\r\n  const formLabel = generateText(mode);\r\n  return (\r\n    <>\r\n      <Card className=\" border-0\">\r\n        <CardHeader className=\"bg-transparent\">\r\n          <div className=\"text-muted text-center\">\r\n            <Label>{formLabel} ساختمان</Label>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form role=\"form\" onSubmit={handleSubmit}>\r\n            <input\r\n              name={formInputNames.buildingId}\r\n              value={formData.buildingId}\r\n              hidden\r\n            />\r\n            <Row className=\"item-center \">\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>نام ساختمان:</small>\r\n                </div>\r\n                <Input\r\n                  type=\"text\"\r\n                  name={formInputNames.name}\r\n                  placeholder=\"نام ساختمان\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <div className=\"text-right text-muted\">\r\n                  <small>تعداد واحدها:</small>\r\n                </div>\r\n                <Input\r\n                  disabled={mode === formMode.edit}\r\n                  type=\"number\"\r\n                  name={formInputNames.apartmentCount}\r\n                  step=\"1\"\r\n                  min=\"2\"\r\n                  placeholder=\"تعداد واحدها\"\r\n                  value={formData.apartmentCount}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Button color=\"secondary\" className=\"mt-3\">\r\n              {formLabel}\r\n            </Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuildingForm;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CostCategoryForm.jsx",[],"D:\\apartmentui\\apartmentui\\src\\View\\Building\\Building.jsx",["228","229","230","231","232"],"import { Button, Label, Row } from \"reactstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BuildingForm from \"../../Component/Form/BuildingForm\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport ATable from \"../../Component/Table/Table\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nimport PageVariable from \"../../variable\";\r\nimport { ReadBuidling } from \"../../Services/StorageServces/LocalStorageService\";\r\nconst headerTitle = [\r\n  {\r\n    title: PageVariable.Building.headerTitle.title,\r\n    field: \"title\",\r\n  },\r\n  {\r\n    title: PageVariable.Building.headerTitle.UnitNumber,\r\n    field: \"apartmentCount\",\r\n  },\r\n];\r\n\r\nclass BuildingInfo {\r\n  constructor(data) {\r\n    for (let item in data) {\r\n      this[item] = data[item];\r\n    }\r\n  }\r\n  get id() {\r\n    return this.buildingId;\r\n  }\r\n}\r\n\r\nconst Buildings = () => {\r\n  const [building, setBuilding] = useState({});\r\n  const [modalState, toggleModal, getModalData] = useModal([\"edit\"]);\r\n  useEffect(async () => {\r\n    const buildings = await GetData(\"BaseInfo/Building\");\r\n    setBuilding(buildings.find((b) => b.buildingId === +ReadBuidling()));\r\n  }, [modalState]);\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <div className=\"text-center\">\r\n        <Label className=\"mt-2\"> {building.name} </Label>\r\n        <Button\r\n          className=\"btn btn-primary float-left btn pb-0 pr-2 pl-2 pt-1 d-inline-block mt-2 ml-3 \"\r\n          onClick={() => toggleModal(\"edit\")}\r\n        >\r\n          <i className=\"fas fa-edit\"></i>\r\n        </Button>\r\n      </div>\r\n      <FormModal\r\n        Form={BuildingForm}\r\n        toggle={() => toggleModal(\"edit\")}\r\n        data={getModalData(\"edit\")}\r\n        mode={formMode.edit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buildings;\r\n","D:\\apartmentui\\apartmentui\\src\\Utility\\FormButtonGenerator.js",["233"],"const { default: formMode } = require(\"../Component/Form/FormConfig\");\r\n\r\nconst generateText = (mode) =>\r\n{\r\n    switch(mode)\r\n    {\r\n        case formMode.add : return \"افزودن\";\r\n        case formMode.edit : return \"ویرایش\";\r\n        case formMode.delete : return \"حذف\";\r\n    }\r\n}\r\n\r\nexport default generateText;","D:\\apartmentui\\apartmentui\\src\\Services\\APIConfig.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Form\\UseFormData.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Component\\Table\\Pagination.jsx",[],"D:\\apartmentui\\apartmentui\\src\\Services\\FormServices\\UnitService.js",[],"D:\\apartmentui\\apartmentui\\src\\View\\Calculate\\Calculate.jsx",["234"],"import { useEffect, useState } from \"react\";\r\nimport CalculateForm from \"../../Component/Form/CalculateForm\";\r\nimport formMode from \"../../Component/Form/FormConfig\";\r\nimport FormModal from \"../../Component/Modal/FormModal\";\r\nimport useModal from \"../../Component/Modal/UseModal\";\r\nimport ATable from \"../../Component/Table/Table\";\r\nimport { NetDatetime } from \"../../Utility/NETUtility\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { GetData } from \"../../Services/ApiServices\";\r\nconst headerTitle = [\r\n  {\r\n    title: \"تاریخ محاسبه\",\r\n    field: \"calculate\",\r\n  },\r\n  {\r\n    title: \"بازه محاسبه شده\",\r\n    field: \"span\",\r\n  },\r\n];\r\n\r\nclass CalculateInfo {\r\n  constructor(data) {\r\n    for (let item in data) {\r\n      this[item] = data[item];\r\n    }\r\n  }\r\n  get span() {\r\n    return NetDatetime(this.from) + \" تا \" + NetDatetime(this.to);\r\n  }\r\n  get calculate() {\r\n    return NetDatetime(this.calculateDateTime);\r\n  }\r\n}\r\nconst Calculate = () => {\r\n  const [calculate, setCalculate] = useState([]);\r\n  const [modalState, toggleModal, getModalData] = useModal([\"add\"]);\r\n\r\n  useEffect(async () => {\r\n    const calculate = await GetData(\"Charge/Calculation/All\");\r\n    setCalculate(calculate);\r\n  }, [modalState]);\r\n  return (\r\n    <>\r\n      <ATable\r\n        tableTitle=\"لیست شارژ قابل پرداخت هر واحد\"\r\n        rows={calculate.map((c) => new CalculateInfo(c))}\r\n        headers={headerTitle}\r\n      >\r\n        <Button\r\n          className=\"mx-2 p-2\"\r\n          color=\"danger\"\r\n          onClick={() => toggleModal(\"add\")}\r\n        >\r\n          محاسبه شارژ همه واحدها\r\n        </Button>\r\n      </ATable>\r\n      <FormModal\r\n        Form={CalculateForm}\r\n        toggle={() => toggleModal(\"add\")}\r\n        data={getModalData(\"add\")}\r\n        mode={formMode.add}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Calculate;\r\n","D:\\apartmentui\\apartmentui\\src\\Component\\Form\\BillForm.jsx",["235","236","237","238","239","240","241","242","243","244","245"],"D:\\apartmentui\\apartmentui\\src\\Component\\Form\\CalculateForm.jsx",["246","247","248","249","250"],"D:\\apartmentui\\apartmentui\\src\\Services\\StorageServces\\LocalStorageService.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":15},{"ruleId":"255","severity":1,"message":"259","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":25},{"ruleId":"255","severity":1,"message":"261","line":6,"column":19,"nodeType":"257","messageId":"258","endLine":6,"endColumn":27},{"ruleId":"255","severity":1,"message":"262","line":14,"column":10,"nodeType":"257","messageId":"258","endLine":14,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":89,"column":13,"nodeType":"265","endLine":92,"endColumn":4},{"ruleId":"263","severity":1,"message":"264","line":48,"column":13,"nodeType":"265","endLine":51,"endColumn":4},{"ruleId":"263","severity":1,"message":"264","line":56,"column":13,"nodeType":"265","endLine":59,"endColumn":4},{"ruleId":"255","severity":1,"message":"266","line":2,"column":15,"nodeType":"257","messageId":"258","endLine":2,"endColumn":24},{"ruleId":"255","severity":1,"message":"267","line":2,"column":26,"nodeType":"257","messageId":"258","endLine":2,"endColumn":29},{"ruleId":"255","severity":1,"message":"268","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":14},{"ruleId":"255","severity":1,"message":"269","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":24},{"ruleId":"255","severity":1,"message":"270","line":1,"column":26,"nodeType":"257","messageId":"258","endLine":1,"endColumn":35},{"ruleId":"255","severity":1,"message":"271","line":1,"column":37,"nodeType":"257","messageId":"258","endLine":1,"endColumn":40},{"ruleId":"255","severity":1,"message":"266","line":1,"column":42,"nodeType":"257","messageId":"258","endLine":1,"endColumn":51},{"ruleId":"255","severity":1,"message":"267","line":1,"column":53,"nodeType":"257","messageId":"258","endLine":1,"endColumn":56},{"ruleId":"255","severity":1,"message":"272","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":19},{"ruleId":"255","severity":1,"message":"273","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"274","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":24},{"ruleId":"255","severity":1,"message":"275","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":17},{"ruleId":"255","severity":1,"message":"276","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":16},{"ruleId":"255","severity":1,"message":"277","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":16},{"ruleId":"255","severity":1,"message":"278","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"268","line":9,"column":18,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"255","severity":1,"message":"266","line":9,"column":24,"nodeType":"257","messageId":"258","endLine":9,"endColumn":33},{"ruleId":"255","severity":1,"message":"279","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":17},{"ruleId":"255","severity":1,"message":"280","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"281","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":20},{"ruleId":"255","severity":1,"message":"282","line":13,"column":8,"nodeType":"257","messageId":"258","endLine":13,"endColumn":16},{"ruleId":"255","severity":1,"message":"283","line":43,"column":17,"nodeType":"257","messageId":"258","endLine":43,"endColumn":25},{"ruleId":"255","severity":1,"message":"284","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":16},{"ruleId":"255","severity":1,"message":"278","line":2,"column":3,"nodeType":"257","messageId":"258","endLine":2,"endColumn":9},{"ruleId":"255","severity":1,"message":"285","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":19},{"ruleId":"255","severity":1,"message":"278","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":16},{"ruleId":"255","severity":1,"message":"286","line":1,"column":36,"nodeType":"257","messageId":"258","endLine":1,"endColumn":47},{"ruleId":"255","severity":1,"message":"287","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"286","line":2,"column":49,"nodeType":"257","messageId":"258","endLine":2,"endColumn":60},{"ruleId":"263","severity":1,"message":"264","line":43,"column":32,"nodeType":"265","endLine":52,"endColumn":4},{"ruleId":"288","severity":1,"message":"289","line":44,"column":14,"nodeType":"290","messageId":"291","endLine":44,"endColumn":16},{"ruleId":"263","severity":1,"message":"292","line":53,"column":35,"nodeType":"293","endLine":53,"endColumn":37,"suggestions":"294"},{"ruleId":"263","severity":1,"message":"264","line":59,"column":13,"nodeType":"265","endLine":59,"endColumn":55},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"295","line":1,"column":28,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"275","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":17},{"ruleId":"255","severity":1,"message":"296","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":21},{"ruleId":"255","severity":1,"message":"276","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"255","severity":1,"message":"297","line":12,"column":3,"nodeType":"257","messageId":"258","endLine":12,"endColumn":12},{"ruleId":"255","severity":1,"message":"298","line":15,"column":3,"nodeType":"257","messageId":"258","endLine":15,"endColumn":13},{"ruleId":"255","severity":1,"message":"299","line":19,"column":3,"nodeType":"257","messageId":"258","endLine":19,"endColumn":17},{"ruleId":"255","severity":1,"message":"300","line":32,"column":48,"nodeType":"257","messageId":"258","endLine":32,"endColumn":59},{"ruleId":"255","severity":1,"message":"268","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":7},{"ruleId":"263","severity":1,"message":"264","line":39,"column":32,"nodeType":"265","endLine":54,"endColumn":4},{"ruleId":"288","severity":1,"message":"289","line":48,"column":14,"nodeType":"290","messageId":"291","endLine":48,"endColumn":16},{"ruleId":"263","severity":1,"message":"301","line":56,"column":35,"nodeType":"293","endLine":56,"endColumn":37,"suggestions":"302"},{"ruleId":"255","severity":1,"message":"295","line":1,"column":28,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"289","line":49,"column":21,"nodeType":"290","messageId":"291","endLine":49,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":53,"column":13,"nodeType":"265","endLine":58,"endColumn":4},{"ruleId":"263","severity":1,"message":"303","line":58,"column":6,"nodeType":"293","endLine":58,"endColumn":8,"suggestions":"304"},{"ruleId":"255","severity":1,"message":"267","line":1,"column":25,"nodeType":"257","messageId":"258","endLine":1,"endColumn":28},{"ruleId":"255","severity":1,"message":"305","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"306","line":11,"column":7,"nodeType":"257","messageId":"258","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"307","line":22,"column":7,"nodeType":"257","messageId":"258","endLine":22,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":36,"column":13,"nodeType":"265","endLine":39,"endColumn":4},{"ruleId":"308","severity":1,"message":"309","line":5,"column":5,"nodeType":"310","messageId":"311","endLine":10,"endColumn":6},{"ruleId":"263","severity":1,"message":"264","line":39,"column":13,"nodeType":"265","endLine":42,"endColumn":4},{"ruleId":"255","severity":1,"message":"272","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":19},{"ruleId":"255","severity":1,"message":"312","line":12,"column":3,"nodeType":"257","messageId":"258","endLine":12,"endColumn":11},{"ruleId":"255","severity":1,"message":"313","line":13,"column":3,"nodeType":"257","messageId":"258","endLine":13,"endColumn":10},{"ruleId":"255","severity":1,"message":"314","line":14,"column":3,"nodeType":"257","messageId":"258","endLine":14,"endColumn":8},{"ruleId":"255","severity":1,"message":"275","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":17},{"ruleId":"255","severity":1,"message":"281","line":19,"column":8,"nodeType":"257","messageId":"258","endLine":19,"endColumn":20},{"ruleId":"255","severity":1,"message":"276","line":21,"column":8,"nodeType":"257","messageId":"258","endLine":21,"endColumn":16},{"ruleId":"255","severity":1,"message":"315","line":59,"column":17,"nodeType":"257","messageId":"258","endLine":59,"endColumn":25},{"ruleId":"255","severity":1,"message":"316","line":60,"column":34,"nodeType":"257","messageId":"258","endLine":60,"endColumn":46},{"ruleId":"255","severity":1,"message":"300","line":60,"column":48,"nodeType":"257","messageId":"258","endLine":60,"endColumn":59},{"ruleId":"255","severity":1,"message":"317","line":67,"column":9,"nodeType":"257","messageId":"258","endLine":67,"endColumn":18},{"ruleId":"255","severity":1,"message":"295","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":18},{"ruleId":"255","severity":1,"message":"268","line":5,"column":3,"nodeType":"257","messageId":"258","endLine":5,"endColumn":7},{"ruleId":"255","severity":1,"message":"266","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":12},{"ruleId":"255","severity":1,"message":"300","line":28,"column":48,"nodeType":"257","messageId":"258","endLine":28,"endColumn":59},{"ruleId":"255","severity":1,"message":"317","line":35,"column":9,"nodeType":"257","messageId":"258","endLine":35,"endColumn":18},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'AModal' is defined but never used.","'UnControlledModal' is defined but never used.","'PostData' is defined but never used.","'ReadBuidling' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Container' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'CostForm' is defined but never used.","'CostCategoryForm' is defined but never used.","'GetData' is defined but never used.","'formMode' is defined but never used.","'useModal' is defined but never used.","'Button' is defined but never used.","'FormModal' is defined but never used.","'DeleteForm' is defined but never used.","'PageVariable' is defined but never used.","'BillForm' is defined but never used.","'setCosts' is assigned a value but never used.","'Building' is defined but never used.","'APagination' is defined but never used.","'ModalFooter' is defined but never used.","'Children' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'data', 'mode', 'setFormData', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["320"],"'useState' is defined but never used.","'NetDatetime' is defined but never used.","'FormGroup' is defined but never used.","'InputGroup' is defined but never used.","'ButtonDropdown' is defined but never used.","'setFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'formData', 'mode', 'setFormData', and 'url'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'mode' and 'setFormData'. Either include them or remove the dependency array.",["322"],"'ATable' is defined but never used.","'headerTitle' is assigned a value but never used.","'BuildingInfo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Progress' is defined but never used.","'Spinner' is defined but never used.","'Table' is defined but never used.","'setBills' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'formLabel' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [data, mode, setFormData, url]",{"range":"329","text":"330"},"Update the dependencies array to be: [data, formData, mode, setFormData, url]",{"range":"331","text":"332"},"Update the dependencies array to be: [mode, setFormData]",{"range":"333","text":"334"},[1474,1476],"[data, mode, setFormData, url]",[1522,1524],"[data, formData, mode, setFormData, url]",[1499,1501],"[mode, setFormData]"]